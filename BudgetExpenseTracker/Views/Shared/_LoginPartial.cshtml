@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    //@{
        var user = await UserManager.GetUserAsync(User);
        var fullName = user != null ? $"{user.FirstName} {user.LastName}" : User.Identity?.Name;
   // }
        <li class="nav-item">
            <a class="nav-link text-dark px-3" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">
                <div class="text-start">
                    <div class="fw-bold fs-5 lh-sm">Welcome</div>
                    <div class="fw-semibold fs-6">@fullName</div>
                </div>
            </a>
        </li>

    <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout"
                  asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link text-dark d-flex align-items-center">
                    <i class="bi bi-box-arrow-right me-1"></i> Logout
                </button>
            </form>

    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
